{"ast":null,"code":"var _jsxFileName = \"D:\\\\new folder aibott\\\\New folder\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport API from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uid = () => Math.random().toString(36).slice(2, 9);\nexport default function Dashboard() {\n  _s();\n  const [username] = useState(localStorage.getItem(\"username\") || \"Alice\");\n  const [reviews, setReviews] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [codeInput, setCodeInput] = useState(\"\");\n  const displayRef = useRef(null);\n  useEffect(() => {\n    setReviews([{\n      id: \"r1\",\n      comment: \"public class HelloWorld { ... }\",\n      ai_feedback: \"Use .equals() for string comparison.\",\n      created_at: new Date().toISOString()\n    }]);\n  }, []);\n  const generateMockFeedback = code => {\n    if (code.includes(\"==\") && code.includes('\"')) {\n      return \"Use .equals() instead of == for string comparison.\";\n    }\n    return \"Looks good. Consider adding comments and unit tests.\";\n  };\n  const handleSubmit = async () => {\n    if (!codeInput.trim()) return;\n    const newReview = {\n      id: uid(),\n      comment: codeInput,\n      ai_feedback: generateMockFeedback(codeInput),\n      created_at: new Date().toISOString()\n    };\n    setReviews([newReview, ...reviews]);\n    setSelected(newReview);\n    setCodeInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen bg-black\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      reviews: reviews,\n      onSelectReview: setSelected,\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-8 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Code Review Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: displayRef,\n        className: \"mb-6 bg-[#0f0f10] p-4 rounded-md\",\n        children: !selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-400\",\n          children: \"Select a past review or submit new code.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"whitespace-pre-wrap text-sm\",\n            children: selected.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-[#0b0b0b] p-3 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-400\",\n              children: \"AI Review:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: selected.ai_feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: codeInput,\n        onChange: e => setCodeInput(e.target.value),\n        placeholder: \"Paste your code here...\",\n        rows: 8,\n        className: \"w-full p-4 rounded-md bg-[#0f0f10] border border-white/5 text-sm font-mono\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"mt-4 px-6 py-2 rounded-md font-semibold bg-green-600 hover:bg-green-700\",\n        children: \"Submit for Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"puyd4R+ss0RSFxlYbKHGeJURrYs=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Sidebar","API","jsxDEV","_jsxDEV","uid","Math","random","toString","slice","Dashboard","_s","username","localStorage","getItem","reviews","setReviews","selected","setSelected","codeInput","setCodeInput","displayRef","id","comment","ai_feedback","created_at","Date","toISOString","generateMockFeedback","code","includes","handleSubmit","trim","newReview","className","children","onSelectReview","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","onChange","e","target","placeholder","rows","onClick","_c","$RefreshReg$"],"sources":["D:/new folder aibott/New folder/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport API from \"../api\";\r\n\r\nconst uid = () => Math.random().toString(36).slice(2, 9);\r\n\r\nexport default function Dashboard() {\r\n  const [username] = useState(localStorage.getItem(\"username\") || \"Alice\");\r\n  const [reviews, setReviews] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [codeInput, setCodeInput] = useState(\"\");\r\n  const displayRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setReviews([\r\n      {\r\n        id: \"r1\",\r\n        comment: \"public class HelloWorld { ... }\",\r\n        ai_feedback: \"Use .equals() for string comparison.\",\r\n        created_at: new Date().toISOString(),\r\n      }\r\n    ]);\r\n  }, []);\r\n\r\n  const generateMockFeedback = (code) => {\r\n    if (code.includes(\"==\") && code.includes('\"')) {\r\n      return \"Use .equals() instead of == for string comparison.\";\r\n    }\r\n    return \"Looks good. Consider adding comments and unit tests.\";\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!codeInput.trim()) return;\r\n    const newReview = {\r\n      id: uid(),\r\n      comment: codeInput,\r\n      ai_feedback: generateMockFeedback(codeInput),\r\n      created_at: new Date().toISOString(),\r\n    };\r\n    setReviews([newReview, ...reviews]);\r\n    setSelected(newReview);\r\n    setCodeInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-black\">\r\n      <Sidebar reviews={reviews} onSelectReview={setSelected} username={username} />\r\n      <div className=\"flex-1 p-8 text-white\">\r\n        <h1 className=\"text-xl font-bold mb-4\">Code Review Dashboard</h1>\r\n\r\n        {/* Selected Review Display */}\r\n        <div ref={displayRef} className=\"mb-6 bg-[#0f0f10] p-4 rounded-md\">\r\n          {!selected ? (\r\n            <div className=\"text-gray-400\">Select a past review or submit new code.</div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              <pre className=\"whitespace-pre-wrap text-sm\">{selected.comment}</pre>\r\n              <div className=\"bg-[#0b0b0b] p-3 rounded-md\">\r\n                <div className=\"text-xs text-gray-400\">AI Review:</div>\r\n                <div>{selected.ai_feedback}</div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Code Input Box */}\r\n        <textarea\r\n          value={codeInput}\r\n          onChange={(e) => setCodeInput(e.target.value)}\r\n          placeholder=\"Paste your code here...\"\r\n          rows={8}\r\n          className=\"w-full p-4 rounded-md bg-[#0f0f10] border border-white/5 text-sm font-mono\"\r\n        />\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"mt-4 px-6 py-2 rounded-md font-semibold bg-green-600 hover:bg-green-700\"\r\n        >\r\n          Submit for Review\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}